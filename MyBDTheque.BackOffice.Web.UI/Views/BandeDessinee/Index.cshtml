@*@model IEnumerable<MyBDTheque.Core.Data.BandeDessinee>*@
@using MyBDTheque.Core.Data;
@using LibrairiesAspnet

@model PaginatedList<BandeDessinee>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
@using (Html.BeginForm("Index", "BandeDessinee", FormMethod.Get))
{
    <p>
        Trouver par nom : @Html.TextBox("SearchString")
        <input type="submit" value="Filtrer" />
    </p>
}
<div>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.ActionLink(@Html.DisplayNameFor(model => model[0].Titre), "Index", new { typeTrie = ViewBag.TypeTrie, colonne = "Titre",currentFilter=ViewBag.CurrentFilter })
                </th>
                <th>
                    @Html.ActionLink(@Html.DisplayNameFor(model => model[0].DateParution), "Index", new { typeTrie = ViewBag.TypeTrie, colonne = "DateParution",currentFilter=ViewBag.CurrentFilter })
                </th>
                <th>
                    @Html.ActionLink(@Html.DisplayNameFor(model => model[0].Serie), "Index", new { typeTrie = ViewBag.TypeTrie, colonne = "Serie",currentFilter=ViewBag.CurrentFilter })
                    
                </th>
                <th>liens</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var item in Model) {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Titre)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateParution)
                    </td>
                    <td>
                        @if (item.Serie != null)
                        {
                            @Html.DisplayFor(modelItem => item.Serie.Titre)
                        }
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.BandeDessineeId">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.BandeDessineeId">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.BandeDessineeId">Delete</a>
                    </td>
                </tr>
        }
        </tbody>
    </table>

    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }
    <div style="position: absolute; left:0px; bottom: -2%;">
    <a asp-action="Index"
        asp-controller="BandeDessinee"
        asp-route-typeTrie="@ViewBag.TypeTrie"
        asp-route-pageNumber="@(Model.PageIndex - 1)"
        asp-route-currentFilter="@ViewBag.CurrentFilter"
        asp-route-SuivantOuPrecedent="true"
        class="btn btn-default @prevDisabled">
        Précédent
    </a>
    <a asp-action="Index"
        asp-controller="BandeDessinee"
        asp-route-typeTrie="@ViewBag.TypeTrie"
        asp-route-pageNumber="@(Model.PageIndex + 1)"
        asp-route-currentFilter="@ViewBag.CurrentFilter"
        asp-route-SuivantOuPrecedent="true"
        class="btn btn-default @nextDisabled">
        Suivant
    </a>
    Page : @Model.PageIndex/@Model.TotalPages</div><div style="position: absolute; right:0px; bottom: 0px;"> Bande dessinées : @Model.MinAffiche-@Model.MaxAffiche/@Model.NbElements</div>
</div>



<style>
    /*#pages{
        position: absolute; 
        right:0px; 
        bottom: 0px;
    }
    #bds{
        position: absolute;
        left: 0px;
        bottom: 0px;
    }*/
    /*tbody {
        overflow-y: scroll;
        overflow-x: hidden;
        max-height: 200px;
        display: block;
    }

    thead {
        display: table;
        width: calc(100% - 17px);
        table-layout: fixed;
    }

    tbody tr {
        table-layout: fixed;
        display: table;
        width: 100%;
    }*/
</style>
      